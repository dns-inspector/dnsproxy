name: "Build & Release"

on:
  push:
    tags: [ "*" ]

permissions:
  actions: read
  contents: read

jobs:
  build:
    name: "Build & Release"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Validate version
        id: validate_version
        run: |
          TAG_NAME="${{ github.ref_name }}"
          VERSION="$(cat dnsproxy.version)"

          echo "Tag name: ${TAG_NAME}, version: ${VERSION}"

          if [[ "${TAG_NAME}" != "${VERSION}" ]]; then
            echo "::error file=dnsproxy.version,line=1::Tag name does not match version file"
            exit 1
          fi

      - name: Set up Go
        id: install_go
        uses: actions/setup-go@v5
        with:
          go-version: "stable"

      - name: Build
        id: build_rpm
        run: DOCKER_CMD=docker ./release.sh $(cat dnsproxy.version)

      - name: Publish RPM
        id: upload_rpm
        run: |
          cd artifacts
          export RPM_NAME="dnsproxy-$(cat ../dnsproxy.version)-1.x86_64.rpm"
          curl -u ${{ secrets.PACKIT_USERNAME }}:${{ secrets.PACKIT_API_KEY }} -F "action=new" -F "file=@${RPM_NAME}" https://pkg.ecn.io/admin/packages

      - name: Upload Artifacts (1/2)
        id: artifacts_1
        uses: actions/upload-artifact@v4
        with:
          name: dnsproxy-linux-amd64.gz
          path: artifacts/*.gz
          compression-level: 0

      - name: Upload Artifacts (2/2)
        id: artifacts_2
        uses: actions/upload-artifact@v4
        with:
          name: dnsproxy-linux-amd64.rpm
          path: artifacts/*.rpm
          compression-level: 0
